openapi: 3.0.1
servers:
  - url: http://localhost:8000/api/v1
  - url: https://localhost:8000/api/v1
  - url: https://nafsia.up.railway.app/api/v1
  - url: https://nafsia-v2.up.railway.app
info:
    title: 'Nafsia APIs Document'
    version: '1.0.0'
    description: 'Test Express API with autogenerated swagger doc'
components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
    schemas:    
        # General Response Schema 
        ApiResponseBase:
            type: "object"
            properties: 
                success: 
                    type: "boolean"
                    example: true
                message: 
                    type: "string"
                    example: "تم تسجيل الدخول بنجاح!"
                data: 
                    type: "object"
        
        # All Errors Schemas
        BadRequest:
                description: Invalid request
                content:
                    application/json:
                    schema:
                        allOf:
                            - $ref: "#/components/schemas/ApiResponseBase"
                            - type: object
                              properties:
                                success: 
                                    example: "false"
                                message:
                                    example: "البيانات المدخلة غير صحيحة"
                                data:
                                    type: "array"
                                    example: [
                                        {
                                            field: 'email',
                                            message: 'الإيميل غير صحيح',
                                        }
                                    ]
        
        NotFound:
                description: Not Found route/entity
                content:
                    application/json:
                    schema:
                        allOf:
                            - $ref: "#/components/schemas/ApiResponseBase"
                            - type: object
                              properties:
                                success: 
                                    example: false
                                message:
                                    example: "هذا المستخدم غير موجود"
        
        UnAuthorized:
                description: Unauthorized user make operation not has access on it
                content:
                    application/json:
                    schema:
                        allOf:
                            - $ref: "#/components/schemas/ApiResponseBase"
                            - type: object
                              properties:
                                success: 
                                    example: false
                                message:
                                    example: "غير مسموح لك بإجراء هذه العملية"
        
        Conflict:
                description: Conflict data/operations
                content:
                    application/json:
                    schema:
                        allOf:
                            - $ref: "#/components/schemas/ApiResponseBase"
                            - type: object
                              properties:
                                success: 
                                    example: false
                                message:
                                    example: "انت قمت بهذا الإجراء من قبل بالفعل"
        
        InternalServerError:
                description: Errro not known for now occured during operation in server
                content:
                    application/json:
                    schema:
                        allOf:
                            - $ref: "#/components/schemas/ApiResponseBase"
                            - type: object
                              properties:
                                success: 
                                    example: false
                                message:
                                    example: "فشلت العملية"
        
        # All Requests Schemas
        Register:
            type: "object"
            required: 
                - name
                - email
                - password
                - phone
                - role
            properties: 
                name: 
                    type: "string"
                    minLength: 3
                    example: "ahnmed ramadan"
                email:
                    type: string
                    format: email
                    example: "ahmd.ramadaan@gmail.com"
                password:
                    type: "string"
                    example: "ahmed123&F"
                phone: 
                    type: "string"
                    example: "01020187993"
                age: 
                    type: "number"
                    example: 22
                gender: 
                    type: "string"
                    enum: ["male", "female"]
                    example: male
                role: 
                    type: "string"
                    enum: ["doctor", "user", "admin"]
                    example: user 
                specialization: 
                    type: "string"
                    example: "الإكتئاب"
                description:
                    type: "string"
                    example: "معالج طبيب عام ..."
                avatar:
                    type: "array"
                    items:
                        type: string
                        format: binary
                    description: صورة الملف الشخصي  
                medicalLicense: 
                    type: array
                    items:
                        type: string
                        format: binary
                    description: صورة الرخصة الطبية للطبيب 
        
        Login:
            type: "object"
            required: 
                - email
                - password
            properties: 
                email:
                    type: "string"
                    format: "email"
                password:
                    type: "string"
        
        ForgotPassword:
            type: "object"
            properties:
                email:
                    type: string
                    format: email
                    example: "ahmd.ramadaan@gmail.com"
        
        UpdateProfile: 
            type: "object"
            properties: 
                name: 
                    type: "string"
                    minLength: 3
                    example: "ahnmed ramadan"
                phone: 
                    type: "string"
                    example: "01020187993"
                age: 
                    type: "number"
                    example: 22
                specialization: 
                    type: "string"
                    example: "الإكتئاب"
                description:
                    type: "string"
                    example: "معالج طبيب عام ..."
                avatar:
                    type: "array"
                    items:
                        type: string
                        format: binary
                    description: صورة الملف الشخصي 
                medicalLicense: 
                    type: array
                    items:
                        type: string
                        format: binary
                    description: صورة الرخصة الطبية للطبيب 

        UpdatePassword: 
            type: "object"
            properties:
                oldPassword:
                    type: "string"
                newPassword:
                    type: "string"
        
        AddTag:
            type: "object"
            properties: 
                name: 
                    type: "string"
                    example: "الصحة النفسية"
        
        AddPost:
            type: object
            # required: 
            #     - title
            #     - content
            properties:
                title:
                    type: string
                    example: أهمية الصحة النفسية
                content:
                    type: string
                    example: هذا المقال يتحدث عن أهمية...
                tags:
                    type: "array"
                    items:
                        type: string
                    example: ["67ef9ba961a3840f1d2888db"]
                image:
                    type: "array"
                    items:
                        type: string
                        format: binary
                    description: يمكنك رفع من صورة حتي 4 صور

        AddReact:
            type: "object"
            properties: 
                ractType:
                    type: "string"
                    enum: ["like"]
                    example: "like"
                postId: 
                    type: "string"
                    example: "6806661b54cce96fa19a191f"
        
        AddAppointment: 
            type: "object"
            properties:
                day: 
                    type: "date"
                    examle: "2025-04-20T20:50:13.034Z"
                    # enum: ["sat", "sun", "mon", "tue", "wed", "thu", "fri"]
                    # example: "fri"
                startAtHour: 
                    type: "string"
                    example: "05:30"
                    description: follow this style HH:MM until 23:59
                duration:
                    type: "number"
                    example: 30
                price: 
                    type: "number"
                    example: 200
                schedule:
                    type: "array"
                    items:
                        type: "object"
                        $ref: "#/components/schemas/AppointmentSchedule"   

        CreatePrivateSession: 
            type: "object"
            properties:
                meetLink: 
                    type: "string"
                    example: "https://meet.google.com/mdt-gvvq-amb"
                startAtIndex: 
                    type: "number"
                    description: index of the start at time in the schedule array
                    example: 0
                appointmentId: 
                    type: "string"
                    example: "6806661b54cce96fa19a1abc"

        CreateCommunitySession: 
            type: "object"
            properties:
                meetLink: 
                    type: "string"
                    example: "https://meet.google.com/mdt-gvvq-amb"
                startAt: 
                    type: "date"
                    example: "2025-04-20T19:50:13.034"
                duration: 
                    type: "number"
                    example: 30
                seats: 
                    type: "number"
                    example: 25
                title:
                    type: "string"
                    example: "الجلسة المجتمعية"
                description:
                    type: "string"
                    example: "الجلسة المجتمعية اليوم سيتم التحدث عن الصحة النفسية"
                tags:
                    type: "array"
                    items:
                        type: "string"
                    example: ["67ef9ba961a3840f1d2888db"]

        AddCommunitySessionMessage: 
            type: "object"
            properties:
                messge: 
                    type: "string"
                sessionId: 
                    type: string
                    example: "67feb22c5fba7d39fcaecb40"

        AddReview: 
            type: "object"
            required:
                - rating
                - doctorId
            properties:
                doctorId: 
                    type: "string"
                    example: "6806661b54cce96fa19a1958"
                rating: 
                    type: "number"
                    enum: [1, 2, 3, 4, 5]
                    min: 1
                    max: 5
                    example: 4
                comment: 
                    type: "string"
                    example: "لقد أستفدت جدا من توجيهات الدكتور"

        AddMeasurement: 
            type: "object"
            required:
                - occupation
                - gender
                - age
                - sleep_quality
                - bmi_category
                - heart_rate
                - systolic_bp
                - diastolic_bp
                - daily_steps
            properties:
                occupation: 
                    type: "string"
                    example: "Engineer"
                gender: 
                    type: "string"
                    example: "Male"
                bmi_category: 
                    type: "string"
                    example: "Normal"
                age: 
                    type: "number"
                sleep_quality: 
                    type: "number"
                heart_rate: 
                    type: "number"
                daily_steps: 
                    type: "number"
                systolic_bp: 
                    type: "number"
                diastolic_bp: 
                    type: "number"
                stress_level: 
                    type: "number"
                    example: 7

        # All Documents Scheams
        GeneralDocument: 
            type: "object"
            properties: 
                _id: 
                    type: "string"
                    example: "67ef9ba961a3840f1d2888db"
                craetedAt: 
                    type: "date"
                    example: "2025-04-20T19:50:13.034"
                updatedAt: 
                    type: "date"
                    example: "2025-04-20T19:50:13.034"

        User: 
            allOf:
              - $ref: "#/components/schemas/GeneralDocument"
              - type: "object"
                properties: 
                    name: 
                        type: "string"
                        minLength: 3
                        example: "ahnmed ramadan"
                    email:
                        type: string
                        format: email
                        example: "ahmd.ramadaan@gmail.com"
                    phone: 
                        type: "string"
                        example: "01020187993"
                    age: 
                        type: "number"
                        example: 22
                    gender: 
                        type: "string"
                        enum: ["male", "female"]
                        example: male
                    role: 
                        type: "string"
                        enum: ["doctor", "user", "admin"]
                        example: user
                    avatar: 
                        type: "object"
                        properties:
                            secure_url: 
                                type: "string"
                            public_id: 
                                type: "string"
                    doctorData: 
                        type: "object"
                        $ref: "#/components/schemas/Doctor"

        Doctor:
            type: "object"
            properties: 
                rate:
                    type: "number"
                    examle: 3.5
                isApproved: 
                    type: "boolean" 
                    example: true
                specialization: 
                    type: "string"
                description:
                    type: "string"
                    example: "معالج طبيب عام ..."
                balance: 
                    type: "number"
                    example: 1000
                medicalLicense: 
                    type: "object"
                    properties:
                        secure_url: 
                            type: "string"
                        public_id: 
                            type: "string"

        Tag: 
            allOf:
              - $ref: "#/components/schemas/GeneralDocument"
              - type: "object"
                properties: 
                    name: 
                        type: "string"
                        example: "الصحة النفسية"

        React: 
            allOf:
              - $ref: "#/components/schemas/GeneralDocument"
              - type: "object"
                properties: 
                    reactType: 
                        type: "string"
                        enum: ["like"]
                        example: "react"
                    userId: 
                        type: "string"
                        example: "67ef9ba961a3840f1d2888db"
                    userData: 
                        type: "object"
                        $ref: "#/components/schemas/User"

        Post: 
            allOf:
              - $ref: "#/components/schemas/GeneralDocument"
              - type: "object"
                properties: 
                    title: 
                        type: "string"
                        example: "اهمية الصحة النفسية"
                    content: 
                        type: "string"
                        example: "..."
                    tags: 
                        type: "array"
                        example: ["67ef9ba961a3840f1d2888db"]
                    tagsData: 
                        type: "array"
                        items: 
                            type: "object"
                            $ref: "#/components/schemas/Tag"
                    doctorId: 
                        type: "string" 
                        example: "67ef9ba961a3840f1d2888d8"
                    doctorData: 
                        type: "object"
                        $ref: "#/components/schemas/User"
                    reactionsData: 
                        type: "array"
                        items:
                            type: "object" 
                            $ref: "#/components/schemas/React"
        
        SavedPosts: 
            allOf:
              - $ref: "#/components/schemas/GeneralDocument"
              - type: "object"
                properties:
                    userId: 
                        type: "string"
                        example: "6806661b54cce96fa19a191f"
                    posts: 
                        type: "array"
                        items:
                            type: "string"
                            example: "6806661b54cce96fa19a191f"
                        example: ["6806661b54cce96fa19a191f"]
                    postsData:  
                        type: "array"
                        items:
                            type: "object"
                            ref: "#/components/schemas/Post"
                    userData: 
                        type: "object"
                        ref: "#/components/schemas/User"

        Appointment: 
            allOf:
                - $ref: "#/components/schemas/GeneralDocument"
                - type: "object"
                  properties:
                    doctorId: 
                        type: "string"
                        example: "6806661b54cce96fa19a1235"
                    day: 
                        type: "date"
                        example: "2025-04-20T20:50:13.034Z"
                        # enum: ["sat", "sun", "mon", "tue", "wed", "thu", "fri"]
                        # example: "fri"
                    duration:
                        type: "number"
                        example: 30
                    price: 
                        type: "number"
                        example: 200
                    schedule:
                        type: "array"
                        items:
                            type: "object"
                            $ref: "#/components/schemas/AppointmentSchedule"
                    doctorData: 
                        type: "object"
                        $ref: "#/components/schemas/User"

        AppointmentSchedule:
            type: "object"
            properties:
                startAt:
                    type: "string"
                    example: "05:30"
                isBooked:
                    type: "boolean"
                    example: false
                sessionId:
                    type: "string"
                    example: "6806661b54cce96fa19a1958"
        
        Session: 
            allOf: 
                - $ref: "#/components/schemas/GeneralDocument"
                - type: "object"
                  properties:
                    appointmentId:
                        type: "string"
                        example: "6806661b54cce96fa19a1958"
                    doctorId: 
                        type: "string"
                        example: "6806661b54cce96fa19a1958"
                    participations:
                        type: "array"
                        items: 
                            type: "string"
                        example:  ["6806661b54cce96fa19a1859"]
                    startAt: 
                        type: "date"
                        example: "2025-04-20T19:50:13.034"
                    duration: 
                        type: "number"
                        example: 30
                    price: 
                        type: "number"
                        example: 300
                    seats: 
                        type: "number"
                        example: 25
                    bookedSeats: 
                        type: "number"
                        example: 0
                    type: 
                        type: "string"
                        enum: ["private", "community"]
                        example: "private"
                    status: 
                        type: "string"
                        enum: ["pending", "confirmed", "canceled", "completed"]
                        example: "pending"
                    title:
                        type: "string"
                        example: "الجلسة المجتمعية"
                    description: 
                        type: "string"
                        example: "الجلسة المجتمعية اليوم سيتم التحدث عن الصحة النفسية"
                    tags:
                        type: "array"
                        items:
                            type: "string"
                        example: ["67ef9ba961a3840f1d2888db"]
                    participationsData:  
                        type: "array"
                        items:
                            type: "object"
                            $ref: "#/components/schemas/User"
                    doctorData: 
                        type: "object"
                        $ref: "#/components/schemas/User"

        Message: 
            allOf: 
                - $ref: "#/components/schemas/GeneralDocument"
                - type: "object"
                  properties:
                    messge: 
                        type: "string"
                    sessionId: 
                        type: string
                        example: "67feb22c5fba7d39fcaecb40"

        Review: 
            allOf: 
                - $ref: "#/components/schemas/GeneralDocument"
                - type: "object"
                  properties:
                    rating: 
                        type: "number"
                        enum: [1, 2, 3, 4, 5]
                        min: 1
                        max: 5
                        example: 4
                    comment: 
                        type: "string"
                        example: "لقد أستفدت جدا من توجيهات الدكتور"
                    doctorId: 
                        type: "string"
                        example: "6806661b54cce96fa19a1958"
                    doctorData:
                        type: "object"
                        $ref: "#/components/schemas/User"
                    userId: 
                        type: "string"
                        example: "6806661b54cce96fa19a1958"
                    userData:
                        type: "object"
                        $ref: "#/components/schemas/User"
        
        Measurement: 
            allOf: 
                - $ref: "#/components/schemas/GeneralDocument"
                - type: "object"
                  properties:
                    ruserId: 
                        type: "string"
                        example: "6806661b54cce96fa19a1958"
                    occupation: 
                        type: "string"
                        example: "Engineer"
                    gender: 
                        type: "string"
                        example: "Male"
                    bmi_category: 
                        type: "string"
                        example: "Normal"
                    age: 
                        type: "number"
                    sleep_quality: 
                        type: "number"
                    heart_rate: 
                        type: "number"
                    daily_steps: 
                        type: "number"
                    systolic_bp: 
                        type: "number"
                    diastolic_bp: 
                        type: "number"
                    stress_level:
                        type: "number"
                        example: 7

paths:
    # Auth Routes
    /auth/register:
        post:
            tags:
                - Auth
            summary: Register user/admin/doctor
            description: Register user/admin/doctor
            requestBody:
                description: Register Object Body
                content:
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/Register"
            responses:
                201: 
                    description: successful creation user/admin/doctor
                    content:
                        application/json:
                            schema: 
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم إرسال البريد الإلكتروني بنجاح .. برجاء تفعيل الحساب"
                                        data:
                                            null
    
    /auth/verify-email:
        post:
            tags:
                - Auth
            summary: Verify Email User/Admin/Doctor
            description: Verify email user/admin/doctor
            requestBody:
                description: Verify Email Object
                content:
                    application/json:
                        schema:
                           type: "object"
                           prperties: 
                                token:
                                    type: "string" 
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: 'تم تفعيل الإيميل بنجاح'
                                        data: null

    /auth/login:
        post:
            tags:
                - Auth
            summary: Login User/Admin/Doctor
            description: Login user/admin/doctor
            requestBody:
                description: Login object
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Login"
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم تسجيل الدخول بنجاح!"
                                        data:
                                            type: "object"
                                            properties:
                                                user: 
                                                    type: "object"
                                                    $ref: "#/components/schemas/User"
                                                token: 
                                                    type: "string"
   
    /auth/logout:
        post:
            tags:
                - Auth
            summary: Logout User/Admin/Doctor
            description: Logout user/admin/doctor
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم تسجيل الخروج بنجاح!"
                                        data: null
   
    /auth/forgot-password:
        post:
            tags:
                - Auth
            summary: Forgot Password user/admin/doctor
            description: Forgot Password user/admin/doctor
            requestBody:
                description: Forgot Password object
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ForgotPassword"
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم إرسال إيميل لإعادة تسجيل كلمة المرور بنجاح"
                                        data: null
                                            
    /auth/verify-otp:
        post:
            tags:
                - Auth
            summary: Verify Otp user/admin/doctor
            description: Verify otp user/admin/doctor
            requestBody:
                description: Verify Otp object
                content:
                    application/json:
                        schema:
                           type: "object"
                           properties:
                                email: 
                                    type: "string"
                                otp: 
                                    type: "string"
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم تأكيد OTP بنجاح"
                                        data: null
    
    /auth/reset-password:
        post:
            tags:
                - Auth
            summary: Reset Password user/admin/doctor
            description: Reset Password user/admin/doctor
            requestBody:
                description: Reset Password object
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties: 
                                otp: 
                                    typ: "string"
                                password: 
                                    type: "string"
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم إعادة تعيين كلمة المرور بنجاح"
                                        data: null
    
    # User Routes
    /user:
        patch:
            tags:
                - Users
            summary: Update User Profile
            description: User/Admin/Doctor Update his Profile
            security: 
                - bearerAuth: []
            requestBody:
                description: Update Profile object
                content:
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/UpdateProfile"
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم تحديث البيانات بنجاح!"
                                        data:
                                            schema: 
                                                $ref: "#/components/schemas/User"
       
        put:
            tags:
                - Users
            summary: Update User Password
            description: User/Admin/Doctor Update his Password
            security: 
                - bearerAuth: []
            requestBody:
                description: Update Password object
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UpdatePassword"
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم تغيير كلمة المرور بنجاح!"
                                        data: null
       
        get:
            tags:
                - Users
            summary: User Get Profile
            description: User/Admin/Doctor get his Profile
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم إرجاع بيانات المستخدم بنجاح!"
                                        data:
                                            $ref: "#/components/schemas/User"
    
    /user/all:
        get:
            tags:
                - Users
            summary: Get All Users
            description: Any user can get any users by role ["doctor", "user"]
            parameters:    
                - name: role
                  in: query
                  schema:
                    type: string
                    enum: ["user", "doctor"]
                  required: true
                  example: doctor
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم إرجاع المستخدمين المطلوبين بنجاح!"
                                        data:
                                            type: "array"
                                            items:
                                                $ref: "#/components/schemas/User"
        
    /user/search:
        get:
            tags:
                - Users
            summary: Search On Doctors
            description: Any user can search any doctor by name
            parameters:    
                - name: q
                  in: query
                  schema:
                    type: string
                  required: true
                  example: ahmed
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                                schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم إرجاع الأطباء المطابقين بنجاح!"
                                        data:
                                            type: "array"
                                            items:
                                                $ref: "#/components/schemas/User"
        
    # Tags Routes
    /tag:
        post:
            tags:
                - Tags
            summary: Add Tag
            description: Admin add tag
            security:
                - bearerAuth: []
            requestBody:
                description: Add Tag object
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AddTag"
            responses:
                201:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم إضافة الوسم بنجاح!"
                                        data:
                                            $ref: "#/components/schemas/Tag"

        get:
            tags:
                - Tags
            summary: get All Tags
            description: any user can get all tags
            responses:
                200:
                    description: successful operation
                    content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: "#/components/schemas/ApiResponseBase"
                                - type: object
                                  properties:
                                    success:
                                        example: true
                                    message:
                                        example: "تم إرجاع الوسوم بنجاح!"
                                    data:
                                        type: "array"
                                        items:
                                        $ref: "#/components/schemas/Tag"
    
    /tag/{id}:
        patch:
            tags:
                - Tags
            summary: Update Tag
            description: admin update exist tag
            parameters:
                - name: id
                  in: path
                  description: Tag ID
                  required: true
            security:
                - bearerAuth: []
            requestBody:
                description: Update Tag object
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AddTag"
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: true
                                        message:
                                            example: "تم تحديث الوسم بنجاح!"
                                        data:
                                            type: "array"
                                            items:
                                                $ref: "#/components/schemas/Tag"
        delete:
            tags:
                - Tags
            summary: Delete Tag
            description: admin delete exist tag
            parameters:
                - name: id
                  in: path
                  description: Tag ID
                  required: true
            security:
                - bearerAuth: []
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: true
                                        message:
                                            example: "تم حذف الوسم بنجاح!"
                                        data:
                                            type: "object"
                                            properties:
                                                tagId: 
                                                    type: "string"
                                                    example: "67ef9ba961a3840f1d2888db"

    # Posts Routes
    /post: 
        post:
            tags:
                - Posts
            summary: Add Post
            description: Doctor add post
            security: 
                - bearerAuth: []
            requestBody:
                description: Add Post object
                content:
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/AddPost"
            responses:
                201:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم إضافة المنشور بنجاح!"
                                        data:
                                            $ref: "#/components/schemas/Post" 
        get:
            tags:
                - Posts
            summary: Get All Posts
            description: any user can get posts
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم إرجاع المنشور بنجاح!"
                                        data:
                                            $ref: "#/components/schemas/Post" 

    /post/{id}:
        patch: 
            tags: 
                - Posts
            summary: Update Post
            description: Doctor can update his post
            parameters:  
                - name: id
                  in: path
                  description: Post ID
                  required: true
            security: 
                - bearerAuth: []
            requestBody:
                description: Update Post object
                content:
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/AddPost"
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم تحديث المنشور بنجاح!"
                                        data:
                                            $ref: "#/components/schemas/Post" 
        
        delete: 
            tags: 
                - Posts
            summary: Delete Post
            description: Doctor can delete his post
            parameters:  
              - name: id
                in: path
                description: Post ID
                required: true
            security: 
                - bearerAuth: []
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم حذف المنشور بنجاح!"
                                        data:
                                            type: "object"
                                            properties: 
                                                postId: 
                                                    type: "string"
                                                    example: "67ffcbe0319c5aee041363b5" 

        get: 
            tags: 
                - Posts
            summary: Get Post
            description: Any user can get any post
            parameters:  
              - name: id
                in: path
                description: Post ID
                required: true
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم إرجاع المنشور بنجاح!"
                                        data:
                                            $ref: "#/components/schemas/Post"
    
    # Reacts Routes
    /react: 
        post:
            tags:
                - Reacts
            summary: Add React on post
            description: User add react on post
            security: 
                - bearerAuth: []
            requestBody:
                description: Add React object
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AddReact"
            responses:
                201:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم إضافة الريأكت للمنشور بنجاح!"
                                        data:
                                            $ref: "#/components/schemas/React" 
        patch: 
            tags: 
                - Reacts
            summary: Update React on post
            description: User can update his react on post
            security: 
                - bearerAuth: []
            requestBody:
                description: Update React object
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AddReact"
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم تحديث تفاعلك علي المنشور بنجاح!"
                                        data:
                                            $ref: "#/components/schemas/React" 
        
        delete: 
            tags: 
                - Reacts
            summary: Delete React on Post
            description: User can delete his react on post
            security: 
                - bearerAuth: []
            requestBody: 
                description: Delete React On Post Object
                content: 
                    application/json:
                        schema:
                            type: "object"
                            properties: 
                                postId: 
                                    type: "string"
                                    example: "6806661b54cce96fa19a191f"
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم حذف تفاعلك علي المنشور بنجاح!"
                                        data:
                                            type: null

        get: 
            tags: 
                - Reacts
            summary: Get All Reacts On Post
            description: Any user can get any post reactions
            requestBody: 
                description: Get All Post Reactions
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties: 
                                postId: 
                                    type: "string"
                                    example: "6806661b54cce96fa19a191f"
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم إرجاع كل الريأكتس علي المنشور بنجاح!"
                                        data:
                                            type: "array"
                                            items: 
                                                $ref: "#/components/schemas/React"
    
    # SavedPosts Routes
    /saved-posts: 
        post:
            tags:
                - SavedPosts
            summary: Add Post to Saved Post
            description: User can add post to his savedposts
            security: 
                - bearerAuth: []
            requestBody:
                description: Add To SavedPosts object
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties: 
                                postId: 
                                    type: "string"
                                    example: "6806661b54cce96fa19a191f"
            responses:
                201:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم إضافة للمشور للمحفوظات بنجاح!"
                                        data:
                                            $ref: "#/components/schemas/SavedPosts" 
        delete: 
            tags: 
                - SavedPosts
            summary: Delete Post From SavedPosts
            description: User can delete post from his savedposts
            security: 
                - bearerAuth: []
            requestBody: 
                description: Delete Post From SeavedPosts Object
                content: 
                    application/json:
                        schema:
                            type: "object"
                            properties: 
                                postId: 
                                    type: "string"
                                    example: "6806661b54cce96fa19a191f"
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم حذف المنشةر من المحفوظات بنجاح!"
                                        data:
                                            $ref: "#/components/schemas/SavedPosts" 
                                            

        get: 
            tags: 
                - SavedPosts
            summary: Get All User Posts In SavedPosts
            description: User get all his posts in savedposts
            security: 
                - bearerAuth: []
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم إرجاع كل المنشورات المحفوظة بنجاح!"
                                        data:
                                            $ref: "#/components/schemas/SavedPosts"
    
    /saved-posts/all-posts:
        delete: 
            tags: 
                - SavedPosts
            summary: delete All User Posts In SavedPosts
            description: User delete all his posts in savedposts
            security: 
                - bearerAuth: []
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم حذف كل المنشورات المحفوظة بنجاح!"
                                        data:
                                            type: []
    
    # Appointment Routes
    /appointment:
        post:
            tags:
                - Appointments
            summary: Add Appointment
            description: Doctor add Appointemnt in any day of week
            security:
                - bearerAuth: []
            requestBody:
                description: Add Appointment object
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AddAppointment"
            responses:
                201:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم إضافة الموعد بنجاح!"
                                        data:
                                            $ref: "#/components/schemas/Appointment"

        get:
            tags:
                - Appointments
            summary: Get All Doctor Appointments
            description: any user can get all appointments
            parameters:
                - name: doctorId
                  in: query
                  schema:
                    type: string
                  required: true
                  example: "6806661b54cce96fa19a1958"
            responses:
                200:
                    description: successful operation
                    content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: "#/components/schemas/ApiResponseBase"
                                - type: object
                                  properties:
                                    success:
                                        example: true
                                    message:
                                        example: "تم إرجاع كل مواعيد الدكتور بنجاح بنجاح!"
                                    data:
                                        type: "array"
                                        items:
                                        $ref: "#/components/schemas/Appointment"

    /appointment/{id}:
        patch:
            tags:
                - Appointments
            summary: Update Appointment for doctor
            description: Doctor update exist his appointment
            parameters:
                - name: id
                  in: path
                  description: Appointment ID
                  schema: 
                    type: string
                  required: true
                  example: "6806661b54cce96fa19a1999"
            security:
                - bearerAuth: []
            requestBody:
                description: Update Appointment object
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AddAppointment"
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: true
                                        message:
                                            example: "تم تحديث الموعد بنجاح!"
                                        data:
                                            type: "array"
                                            items:
                                                $ref: "#/components/schemas/Appointment"
        
        delete:
            tags:
                - Appointments
            summary: Delete Appointment
            description: Doctor delete exist his appointment
            parameters:
                - name: id
                  in: path
                  description: Appointment ID
                  schema: 
                    type: string
                  required: true
                  example: "6806661b54cce96fa19a1999"
            security:
                - bearerAuth: []
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: true
                                        message:
                                            example: "تم حذف الموعد بنجاح!"
                                        data:
                                            type: "object"
                                            properties:
                                                appointmentId: 
                                                    type: "string"
                                                    example: "6806661b54cce96fa19a1999"
        get:
            tags:
                - Appointments
            summary: Get Appointment By ID
            description: Any user can get appointment by id
            parameters:
                - name: id
                  in: path
                  description: Appointment ID
                  schema: 
                    type: string
                  required: true
                  example: "6806661b54cce96fa19a1999"
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: true
                                        message:
                                            example: "تم إرجاع الموعد بنجاح!"
                                        data:
                                            $ref: "#/components/schemas/Appointment"

    # Session Routes
    # General Sessions
    /session:
        get:
            tags:
                - Sessions
            summary: Get all Sessions
            description: Authntiacted User/Admin/Dotcor returned session based on filters
            security:
                - bearerAuth: []
            parameters:
                - name: userId
                  in: query
                  schema: 
                    type: string
                  description: User ID
                  required: false
                - name: doctorId
                  in: query
                  schema: 
                    type: string
                  description: Doctor ID
                  required: false
                - name: status
                  in: query
                  schema: 
                    type: string
                  description: Session Status ["pending", "confirmed", "canceled", pending]
                  required: false
                - name: type
                  in: query
                  schema: 
                    type: string
                  description: Session Type => ["community", "private"]
                  required: false
                - name: pageSize
                  in: query
                  schema: 
                    type: number
                  description: Number of sessions
                  required: false
                - name: pageNumber
                  in: query
                  schema: 
                    type: number
                  description: Page Number
                  required: false
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم إرجاع كل الجلسات المطلوبة بنجاح!"
                                        data:
                                            type: "array"
                                            items:
                                                $ref: "#/components/schemas/Session"

    /session/{id}:
        get:
            tags:
                - Sessions
            summary: Get Session By ID
            description: Authntiacted User/Admin/Dotcor returned session based on filters
            security:
                - bearerAuth: []
            parameters:
                - name: id
                  in: path
                  schema: 
                    type: string
                  description: Session ID
                  required: true
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم إرجاع كل الجلسات المطلوبة بنجاح!"
                                        data:
                                            $ref: "#/components/schemas/Session"
    
    /sesssion/{id}/complete:
        patch:
            tags:
                - Sessions
            summary: Update Session to Complete
            description: Doctor update his session to complete status
            security:
                - bearerAuth: []
            paramerters:
                - name: id
                  in: path
                  description: Session Id
                  schema:
                    type: string
                  required: true
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم تأكيد إنتهاء الجلسة بنجاح!"
                                        data:
                                            $ref: "#/components/schemas/Session"

    # Private Sessions
    /session/private-session:
        post:
            tags:
                - Sessions
            summary: Craete Private Session
            description: User create private session 
            security:
                - bearerAuth: []
            requestBody:
                description: Create Private Session Object
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreatePrivateSession"
            responses:
                201:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم حجز جلسة مع الدكتور بنجاح!"
                                        data:
                                            $ref: "#/components/schemas/Session"
    
    /session/private-session/{id}/confirm:
        patch:
            tags:
                - Sessions
            summary: Confirm Or cancel Private Session
            description: Doctor can confirm/cancel private session 
            security:
                - bearerAuth: []
            parameters: 
                - name: id
                  in: path
                  description: Private Session ID
                  schema:
                    type: string
                  required: true
                - name: status
                  in: query
                  schema:
                    type: 
                    enum: ["canceled", "confirmed"]
                  required: true
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم تحديث حالة الجلسة بنجاح!"
                                        data:
                                            $ref: "#/components/schemas/Session"
    
    # Community sessions
    /session/community-session:
        post:
            tags:
                - Sessions
            summary: Craete Community Session
            description: Doctor create community session 
            security:
                - bearerAuth: []
            requestBody:
                description: Create Community Session Object
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreateCommunitySession"
            responses:
                201:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم إنشاء الجلسة الجماعية بنجاح!"
                                        data:
                                            $ref: "#/components/schemas/Session"
    
    /session/community-session/{id}/participate:
        patch:
            tags:
                - Sessions
            summary: Participation On Community Session
            description: User can participate in community session 
            security:
                - bearerAuth: []
            parameters: 
                - name: id
                  in: path
                  description: Community Session ID
                  schema:
                    type: string
                  required: true
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم الغشتراك في الجلسة بنجاح!"
                                        data:
                                            $ref: "#/components/schemas/Session"

    # Message
    /message:
        post:
            tags:
                - Messages
            summary: Add Message
            description: Doctor add message on his community session
            security:
                - bearerAuth: []
            requestBody:
                description: Add Message object
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AddCommunitySessionMessage"
            responses:
                201:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم إضافة الرسالة بنجاح!"
                                        data:
                                            $ref: "#/components/schemas/Message"

    /message/{id}:
        patch:
            tags:
                - Messages
            summary: Update Message
            description: Doctor update exist his message on his community session
            parameters:
                - name: id
                  in: path
                  description: Message ID
                  required: true
            security:
                - bearerAuth: []
            requestBody:
                description: Update Message object
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                message: 
                                    type: "string"
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: true
                                        message:
                                            example: "تم تحديث الرسالة بنجاح!"
                                        data:
                                            $ref: "#/components/schemas/Message"
        
        delete:
            tags:
                - Messages
            summary: Delete Message
            description: Doctor delete exist his message on his session
            parameters:
                - name: id
                  in: path
                  description: Message ID
                  required: true
            security:
                - bearerAuth: []
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: true
                                        message:
                                            example: "تم حذف الرسالة بنجاح!"
                                        data:
                                            type: "object"
                                            properties:
                                                messageId: 
                                                    type: "string"
                                                    example: "67ef9ba961a3840f1d2888db"
        
        get: 
            tags:
                - Messages
            summary: Get All Messages 
            description: Any user can get messages on his community session
            parameters:
                - name: id
                  in: path
                  description: Session ID
                  schema:
                    type: string
                  required: true
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: true
                                        message:
                                            example: "تم إرجاع كل الرسائل المطلوبة بنجاح!"
                                        data:
                                            type: "array"
                                            items:
                                                $ref: "#/components/schemas/Message"
    
    # Review Routes
    /review:
        post:
            tags:
                - Reviews
            summary: Add Review
            description: User add review on doctor if and only if has private/community session with him
            security:
                - bearerAuth: []
            requestBody:
                description: Add Review object
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AddReview"
            responses:
                201:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم إضافة المراجعة بنجاح!"
                                        data:
                                            $ref: "#/components/schemas/Review"

        get:
            tags:
                - Reviews
            summary: get All Reviews
            description: Any user can get reviews
            parameters: 
                - name: userId
                  in: query
                  description: User ID
                  schema:
                    type: string
                  required: false
                - name: doctorId
                  in: query
                  description: Doctor ID
                  schema:
                    type: string
                  required: false
                - name: pageNumber
                  in: query
                  description: Page Number Of Reviews
                  schema:
                    type: number
                  required: false
                - name: pageSize
                  in: query
                  description: Numbers Of Reviews In One Page
                  schema:
                    type: number
                  required: false
            responses:
                200:
                    description: successful operation
                    content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: "#/components/schemas/ApiResponseBase"
                                - type: object
                                  properties:
                                    success:
                                        example: true
                                    message:
                                        example: "تم إرجاع كل المراجاعات الطلوبة بنجاح!"
                                    data:
                                        type: "array"
                                        items:
                                            $ref: "#/components/schemas/Review"
    
    /review/{id}:
        patch:
            tags:
                - Reviews
            summary: Update Review
            description: User update exist his review
            parameters:
                - name: id
                  in: path
                  description: Review ID
                  schema: 
                    type: string
                  required: true
            security:
                - bearerAuth: []
            requestBody:
                description: Update Review object
                content:
                    application/json:
                        schema:
                            type: "object"
                            properties:
                                rating: 
                                    type: "number"
                                    enum: [1, 2, 3, 4, 5]
                                    min: 1
                                    max: 5
                                    example: 4
                                comment: 
                                    type: "string"
                                    example: "لقد أستفدت جدا من توجيهات الدكتور"

            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: true
                                        message:
                                            example: "تم تحديث المراجعة بنجاح!"
                                        data:
                                            type: "array"
                                            items:
                                                $ref: "#/components/schemas/Review"
        delete:
            tags:
                - Reviews
            summary: Delete Review
            description: User delete exist his review
            parameters:
                - name: id
                  in: path
                  description: Review ID
                  schema:
                    type: string
                  required: true
            security:
                - bearerAuth: []
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: true
                                        message:
                                            example: "تم حذف المراجعة بنجاح!"
                                        data:
                                            type: "object"
                                            properties:
                                                reviewId: 
                                                    type: "string"
                                                    example: "67ef9ba961a3840f1d2888db"


    # Measurements routes 
    /measurement:
        post:
            tags:
                - Measurements
            summary: Add Measurement
            description: User add his measurement
            security:
                - bearerAuth: []
            requestBody:
                description: Add Measurement object
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AddMeasurement"
            responses:
                201:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponseBase"
                                    - type: object
                                      properties:
                                        success:
                                            example: "true"
                                        message:
                                            example: "تم إضافة القياسات بنجاح بنجاح!"
                                        data:
                                            $ref: "#/components/schemas/Measurement"

        get:
            tags:
                -  Measurements
            summary: get All Measurements
            description: Any user can get measurement
            parameters: 
                - name: userId
                  in: query
                  description: User ID
                  schema:
                    type: string
                  required: true
            responses:
                200:
                    description: successful operation
                    content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: "#/components/schemas/ApiResponseBase"
                                - type: object
                                  properties:
                                    success:
                                        example: true
                                    message:
                                        example: "تم إرجاع كل القياسات المطلوبة للمستخدم بنجاح!"
                                    data:
                                        type: "array"
                                        items:
                                            $ref: "#/components/schemas/Measurement"   